<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Extract method &apos;private void grow()&apos; from &apos;com.industriallogic.collections.Map.add()&apos; to &apos;com.industriallogic.collections.Map&apos;&#x0A;- Original project: &apos;SmellectionsPart4-Problem-Java&apos;&#x0A;- Method name: &apos;grow&apos;&#x0A;- Destination type: &apos;com.industriallogic.collections.Map&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;grow&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;com.industriallogic.collections{Map.java" name="grow" replace="false" selection="1194 288" stamp="1411495258486" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Inline local variable &apos;com.industriallogic.collections.Map.add().newSize&apos; in &apos;com.industriallogic.collections.Map.add()&apos;&#x0A;- Original project: &apos;SmellectionsPart4-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.collections.Map.add().newSize&apos;" description="Inline local variable &apos;newSize&apos;" id="org.eclipse.jdt.ui.inline.temp" input="/src&lt;com.industriallogic.collections{Map.java" selection="1140 18" stamp="1411495265966" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private boolean extracted()&apos; from &apos;com.industriallogic.collections.Map.add()&apos; to &apos;com.industriallogic.collections.Map&apos;&#x0A;- Original project: &apos;SmellectionsPart4-Problem-Java&apos;&#x0A;- Method name: &apos;extracted&apos;&#x0A;- Destination type: &apos;com.industriallogic.collections.Map&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;extracted&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;com.industriallogic.collections{Map.java" name="extracted" replace="false" selection="1140 22" stamp="1411495304428" version="1.0" visibility="2"/>&#x0A;&#x0A;<refactoring comment="Extract method &apos;private void setValueAt(Object value, int i)&apos; from &apos;com.industriallogic.collections.Map.add()&apos; to &apos;com.industriallogic.collections.Map&apos;&#x0A;- Original project: &apos;SmellectionsPart4-Problem-Java&apos;&#x0A;- Method name: &apos;setValueAt&apos;&#x0A;- Destination type: &apos;com.industriallogic.collections.Map&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;setValueAt&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;com.industriallogic.collections{Map.java" name="setValueAt" replace="false" selection="1090 18" stamp="1411495454481" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private boolean isValueEqualAt(Object value, int i)&apos; from &apos;com.industriallogic.collections.Map.contains()&apos; to &apos;com.industriallogic.collections.Map&apos;&#x0A;- Original project: &apos;SmellectionsPart4-Problem-Java&apos;&#x0A;- Method name: &apos;isValueEqualAt&apos;&#x0A;- Destination type: &apos;com.industriallogic.collections.Map&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;isValueEqualAt&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;com.industriallogic.collections{Map.java" name="isValueEqualAt" replace="false" selection="2078 49" stamp="1411497522928" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private Object getValueAt(int i)&apos; from &apos;com.industriallogic.collections.Map.isValueEqualAt()&apos; to &apos;com.industriallogic.collections.Map&apos;&#x0A;- Original project: &apos;SmellectionsPart4-Problem-Java&apos;&#x0A;- Method name: &apos;getValueAt&apos;&#x0A;- Destination type: &apos;com.industriallogic.collections.Map&apos;&#x0A;- Declared visibility: &apos;private&apos;&#x0A;- Replace occurrences of statements with method" comments="false" description="Extract method &apos;getValueAt&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;com.industriallogic.collections{Map.java" name="getValueAt" replace="true" selection="2212 9" stamp="1411645072271" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Rename field &apos;values&apos; in &apos;com.industriallogic.collections.Map&apos; to &apos;valuesDeprecated&apos;&#x0A;- Original project: &apos;SmellectionsPart4-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.collections.Map.values&apos;&#x0A;- Renamed element: &apos;com.industriallogic.collections.Map.valuesDeprecated&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" delegate="false" deprecate="false" description="Rename field &apos;values&apos;" flags="589830" getter="false" id="org.eclipse.jdt.ui.rename.field" input="/src&lt;com.industriallogic.collections{Map.java[Map^values" name="valuesDeprecated" references="true" setter="false" stamp="1411645244900" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename field &apos;keys&apos; in &apos;com.industriallogic.collections.Map&apos; to &apos;keysDeprecated&apos;&#x0A;- Original project: &apos;SmellectionsPart4-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.collections.Map.keys&apos;&#x0A;- Renamed element: &apos;com.industriallogic.collections.Map.keysDeprecated&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" delegate="false" deprecate="false" description="Rename field &apos;keys&apos;" flags="589830" getter="false" id="org.eclipse.jdt.ui.rename.field" input="/src&lt;com.industriallogic.collections{Map.java[Map^keys" name="keysDeprecated" references="true" setter="false" stamp="1411647175790" textual="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;length&apos; from expression &apos;keysDeprecated.length&apos;&#x0A;- Original project: &apos;SmellectionsPart4-Problem-Java&apos;&#x0A;- Variable name: &apos;length&apos;&#x0A;- Destination method: &apos;com.industriallogic.collections.Map.shouldGrow()&apos;&#x0A;- Variable expression: &apos;keysDeprecated.length&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;length&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.industriallogic.collections{Map.java" name="length" replace="true" selection="1512 21" stamp="1411647306372" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private boolean extracted(Object key, int i)&apos; from &apos;com.industriallogic.collections.Map.containsKey()&apos; to &apos;com.industriallogic.collections.Map&apos;&#x0A;- Original project: &apos;SmellectionsPart4-Problem-Java&apos;&#x0A;- Method name: &apos;extracted&apos;&#x0A;- Destination type: &apos;com.industriallogic.collections.Map&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;extracted&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;com.industriallogic.collections{Map.java" name="extracted" replace="false" selection="2509 46" stamp="1411648535286" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract local variable &apos;index&apos; from expression &apos;getKeyPosition(key)&apos;&#x0A;- Original project: &apos;SmellectionsPart4-Problem-Java&apos;&#x0A;- Variable name: &apos;index&apos;&#x0A;- Destination method: &apos;com.industriallogic.collections.Map.add()&apos;&#x0A;- Variable expression: &apos;getKeyPosition(key)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;index&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.industriallogic.collections{Map.java" name="index" replace="true" selection="926 20" stamp="1411652732941" version="1.0"/>
</session>