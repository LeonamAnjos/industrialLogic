<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Inline local variable &apos;com.industriallogic.bonus.BonusCalculatorTest.testIndividualBonusWhenSalesAreEqualOrSmallerThanQuota().bonusCalculator&apos; in &apos;com.industriallogic.bonus.BonusCalculatorTest.testIndividualBonusWhenSalesAreEqualOrSmallerThanQuota()&apos;&#x0A;- Original project: &apos;TDDRhythm-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.bonus.BonusCalculatorTest.testIndividualBonusWhenSalesAreEqualOrSmallerThanQuota().bonusCalculator&apos;" description="Inline local variable &apos;bonusCalculator&apos;" id="org.eclipse.jdt.ui.inline.temp" input="/test&lt;com.industriallogic.bonus{BonusCalculatorTest.java" selection="942 39" stamp="1412698234898" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;commition&apos; in &apos;com.industriallogic.bonus.BonusCalculator.individualBonus(...)&apos; to &apos;commission&apos;&#x0A;- Original project: &apos;TDDRhythm-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.bonus.BonusCalculator.individualBonus(double, double, double, double).commition&apos;&#x0A;- Renamed element: &apos;commition&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;commition&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;com.industriallogic.bonus{BonusCalculator.java[BonusCalculator~individualBonus~D~D~D~D@commition!127!142!134!142!D!0!true" name="commission" references="true" stamp="1412698417598" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;comition&apos; in &apos;com.industriallogic.bonus.BonusCalculator.teamBonus(...)&apos; to &apos;commission&apos;&#x0A;- Original project: &apos;TDDRhythm-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.bonus.BonusCalculator.teamBonus(int, int, double, int).comition&apos;&#x0A;- Renamed element: &apos;comition&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;comition&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;com.industriallogic.bonus{BonusCalculator.java[BonusCalculator~teamBonus~I~I~D~I@comition!223!237!230!237!D!0!true" name="commission" references="true" stamp="1412698425110" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;team&apos; in &apos;com.industriallogic.bonus.BonusCalculator.teamBonus(...)&apos; to &apos;numberOfTeamMembers&apos;&#x0A;- Original project: &apos;TDDRhythm-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.bonus.BonusCalculator.teamBonus(int, int, double, int).team&apos;&#x0A;- Renamed element: &apos;team&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;team&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;com.industriallogic.bonus{BonusCalculator.java[BonusCalculator~teamBonus~I~I~D~I@team!242!249!246!249!I!0!true" name="numberOfTeamMembers" references="true" stamp="1412698436147" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;difference&apos; from expression &apos;sales=quota&apos;&#x0A;- Original project: &apos;TDDRhythm-Problem-Java&apos;&#x0A;- Variable name: &apos;difference&apos;&#x0A;- Destination method: &apos;com.industriallogic.bonus.BonusCalculator.individualBonus()&apos;&#x0A;- Variable expression: &apos;sales=quota&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;difference&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.industriallogic.bonus{BonusCalculator.java" name="difference" replace="true" selection="156 14" stamp="1412698789965" version="1.0"/>&#x0A;&#x0A;<refactoring comment="Inline local variable &apos;com.industriallogic.bonus.BonusCalculator.individualBonus().difference&apos; in &apos;com.industriallogic.bonus.BonusCalculator.individualBonus()&apos;&#x0A;- Original project: &apos;TDDRhythm-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.bonus.BonusCalculator.individualBonus().difference&apos;" description="Inline local variable &apos;difference&apos;" id="org.eclipse.jdt.ui.inline.temp" input="/src&lt;com.industriallogic.bonus{BonusCalculator.java" selection="160 26" stamp="1412698919823" version="1.0"/>&#x0A;&#x0A;&#x0A;<refactoring comment="Extract method &apos;private int getDifference(int sales, int quota)&apos; from &apos;com.industriallogic.bonus.BonusCalculator.individualBonus()&apos; to &apos;com.industriallogic.bonus.BonusCalculator&apos;&#x0A;- Original project: &apos;TDDRhythm-Problem-Java&apos;&#x0A;- Method name: &apos;getDifference&apos;&#x0A;- Destination type: &apos;com.industriallogic.bonus.BonusCalculator&apos;&#x0A;- Declared visibility: &apos;private&apos;&#x0A;- Replace occurrences of statements with method" comments="false" description="Extract method &apos;getDifference&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;com.industriallogic.bonus{BonusCalculator.java" name="getDifference" replace="true" selection="160 13" stamp="1412699303473" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract local variable &apos;difference&apos; from expression &apos;getDifference(sales,quota)&apos;&#x0A;- Original project: &apos;TDDRhythm-Problem-Java&apos;&#x0A;- Variable name: &apos;difference&apos;&#x0A;- Destination method: &apos;com.industriallogic.bonus.BonusCalculator.individualBonus()&apos;&#x0A;- Variable expression: &apos;getDifference(sales,quota)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;difference&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.industriallogic.bonus{BonusCalculator.java" name="difference" replace="true" selection="160 27" stamp="1412699334765" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private double extracted(double tax)&apos; from &apos;com.industriallogic.bonus.BonusCalculator.individualBonus()&apos; to &apos;com.industriallogic.bonus.BonusCalculator&apos;&#x0A;- Original project: &apos;TDDRhythm-Problem-Java&apos;&#x0A;- Method name: &apos;extracted&apos;&#x0A;- Destination type: &apos;com.industriallogic.bonus.BonusCalculator&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;extracted&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;com.industriallogic.bonus{BonusCalculator.java" name="extracted" replace="false" selection="286 17" stamp="1412699370293" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract local variable &apos;getCommition&apos; from expression &apos;commission / 100&apos;&#x0A;- Original project: &apos;TDDRhythm-Problem-Java&apos;&#x0A;- Variable name: &apos;getCommition&apos;&#x0A;- Destination method: &apos;com.industriallogic.bonus.BonusCalculator.individualBonus()&apos;&#x0A;- Variable expression: &apos;commission / 100&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;getCommition&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.industriallogic.bonus{BonusCalculator.java" name="getCommition" replace="true" selection="265 16" stamp="1412699439904" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private double calcCommission(double commission)&apos; from &apos;com.industriallogic.bonus.BonusCalculator.individualBonus()&apos; to &apos;com.industriallogic.bonus.BonusCalculator&apos;&#x0A;- Original project: &apos;TDDRhythm-Problem-Java&apos;&#x0A;- Method name: &apos;calcCommission&apos;&#x0A;- Destination type: &apos;com.industriallogic.bonus.BonusCalculator&apos;&#x0A;- Declared visibility: &apos;private&apos;&#x0A;- Replace occurrences of statements with method" comments="false" description="Extract method &apos;calcCommission&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;com.industriallogic.bonus{BonusCalculator.java" name="calcCommission" replace="true" selection="265 16" stamp="1412699456654" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Inline local variable &apos;com.industriallogic.bonus.BonusCalculator.individualBonus().getCommition&apos; in &apos;com.industriallogic.bonus.BonusCalculator.individualBonus()&apos;&#x0A;- Original project: &apos;TDDRhythm-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.bonus.BonusCalculator.individualBonus().getCommition&apos;" description="Inline local variable &apos;getCommition&apos;" id="org.eclipse.jdt.ui.inline.temp" input="/src&lt;com.industriallogic.bonus{BonusCalculator.java" selection="250 41" stamp="1412699467917" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;com.industriallogic.bonus.BonusCalculator.getDifference(...)&apos; to &apos;calcDifference&apos;&#x0A;- Original project: &apos;TDDRhythm-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.bonus.BonusCalculator.getDifference(...)&apos;&#x0A;- Renamed element: &apos;com.industriallogic.bonus.BonusCalculator.calcDifference(...)&apos;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;getDifference&apos;" flags="589826" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;com.industriallogic.bonus{BonusCalculator.java[BonusCalculator~getDifference~I~I" name="calcDifference" references="true" stamp="1412699477053" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;com.industriallogic.bonus.BonusCalculatorTest.testTeamBonusWhenSalesAreBiggerThanQuota()&apos; to &apos;testTeamBonusWhenSalesAreBiggerThanQuotaAndTeamHasOnlyOneMember&apos;&#x0A;- Original project: &apos;TDDRhythm-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.bonus.BonusCalculatorTest.testTeamBonusWhenSalesAreBiggerThanQuota()&apos;&#x0A;- Renamed element: &apos;com.industriallogic.bonus.BonusCalculatorTest.testTeamBonusWhenSalesAreBiggerThanQuotaAndTeamHasOnlyOneMember()&apos;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;testTeamBonusWhenSalesAreBiggerThanQuota&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.method" input="/test&lt;com.industriallogic.bonus{BonusCalculatorTest.java[BonusCalculatorTest~testTeamBonusWhenSalesAreBiggerThanQuota" name="testTeamBonusWhenSalesAreBiggerThanQuotaAndTeamHasOnlyOneMember" references="true" stamp="1412699668023" version="1.0"/>&#x0A;&#x0A;&#x0A;<refactoring comment="Extract local variable &apos;difference&apos; from expression &apos;calcDifference(sales,quota)&apos;&#x0A;- Original project: &apos;TDDRhythm-Problem-Java&apos;&#x0A;- Variable name: &apos;difference&apos;&#x0A;- Destination method: &apos;com.industriallogic.bonus.BonusCalculator.teamBonus()&apos;&#x0A;- Variable expression: &apos;calcDifference(sales,quota)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;difference&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.industriallogic.bonus{BonusCalculator.java" name="difference" replace="true" selection="410 29" stamp="1412699770557" version="1.0"/>&#x0A;&#x0A;&#x0A;&#x0A;&#x0A;&#x0A;&#x0A;<refactoring comment="Rename method &apos;com.industriallogic.bonus.BonusCalculatorTest.testTeamBonusWhenSalesAreBiggerThanQuotaAndTeamMembersIsZero()&apos; to &apos;testTeamBonusWhenSalesAreBiggerThanQuotaAndTeamMembersIsInvalid&apos;&#x0A;- Original project: &apos;TDDRhythm-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.bonus.BonusCalculatorTest.testTeamBonusWhenSalesAreBiggerThanQuotaAndTeamMembersIsZero()&apos;&#x0A;- Renamed element: &apos;com.industriallogic.bonus.BonusCalculatorTest.testTeamBonusWhenSalesAreBiggerThanQuotaAndTeamMembersIsInvalid()&apos;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;testTeamBonusWhenSalesAreBiggerThanQuotaAndTeamMembersIsZero&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.method" input="/test&lt;com.industriallogic.bonus{BonusCalculatorTest.java[BonusCalculatorTest~testTeamBonusWhenSalesAreBiggerThanQuotaAndTeamMembersIsZero" name="testTeamBonusWhenSalesAreBiggerThanQuotaAndTeamMembersIsInvalid" references="true" stamp="1412700144162" version="1.0"/>&#x0A;<refactoring comment="Inline local variable &apos;com.industriallogic.bonus.BonusCalculator.individualBonus().difference&apos; in &apos;com.industriallogic.bonus.BonusCalculator.individualBonus()&apos;&#x0A;- Original project: &apos;TDDRhythm-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.bonus.BonusCalculator.individualBonus().difference&apos;" description="Inline local variable &apos;difference&apos;" id="org.eclipse.jdt.ui.inline.temp" input="/src&lt;com.industriallogic.bonus{BonusCalculator.java" selection="207 41" stamp="1412700365388" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;com.industriallogic.bonus.BonusCalculator.calcDifference(...)&apos; to &apos;calcDif&apos;&#x0A;- Original project: &apos;TDDRhythm-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.bonus.BonusCalculator.calcDifference(...)&apos;&#x0A;- Renamed element: &apos;com.industriallogic.bonus.BonusCalculator.calcDif(...)&apos;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;calcDifference&apos;" flags="589826" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;com.industriallogic.bonus{BonusCalculator.java[BonusCalculator~calcDifference~I~I" name="calcDif" references="true" stamp="1412700378745" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;com.industriallogic.bonus.BonusCalculator.calcDif(...)&apos; to &apos;calcDiff&apos;&#x0A;- Original project: &apos;TDDRhythm-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.bonus.BonusCalculator.calcDif(...)&apos;&#x0A;- Renamed element: &apos;com.industriallogic.bonus.BonusCalculator.calcDiff(...)&apos;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;calcDif&apos;" flags="589826" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;com.industriallogic.bonus{BonusCalculator.java[BonusCalculator~calcDif~I~I" name="calcDiff" references="true" stamp="1412700393363" version="1.0"/>&#x0A;<refactoring comment="Inline local variable &apos;com.industriallogic.bonus.BonusCalculator.teamBonus().difference&apos; in &apos;com.industriallogic.bonus.BonusCalculator.teamBonus()&apos;&#x0A;- Original project: &apos;TDDRhythm-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.bonus.BonusCalculator.teamBonus().difference&apos;" description="Inline local variable &apos;difference&apos;" id="org.eclipse.jdt.ui.inline.temp" input="/src&lt;com.industriallogic.bonus{BonusCalculator.java" selection="476 35" stamp="1412700426064" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private boolean extracted(int numberOfTeamMembers)&apos; from &apos;com.industriallogic.bonus.BonusCalculator.teamBonus()&apos; to &apos;com.industriallogic.bonus.BonusCalculator&apos;&#x0A;- Original project: &apos;TDDRhythm-Problem-Java&apos;&#x0A;- Method name: &apos;extracted&apos;&#x0A;- Destination type: &apos;com.industriallogic.bonus.BonusCalculator&apos;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;extracted&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/src&lt;com.industriallogic.bonus{BonusCalculator.java" name="extracted" replace="false" selection="427 24" stamp="1412700455358" version="1.0" visibility="2"/>
</session>