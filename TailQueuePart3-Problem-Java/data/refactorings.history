<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Extract local variable &apos;first&apos; from expression &apos;new Tail(2,Tail.URGENT,null)&apos;&#x0A;- Original project: &apos;TailQueuePart3-Problem-Java&apos;&#x0A;- Variable name: &apos;first&apos;&#x0A;- Destination method: &apos;com.industriallogic.tailqueue.TailQueueTest.getUrgentTailFirst()&apos;&#x0A;- Variable expression: &apos;new Tail(2,Tail.URGENT,null)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;first&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/test&lt;com.industriallogic.tailqueue{TailQueueTest.java" name="first" replace="true" selection="1289 31" stamp="1412342895555" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;first&apos; in &apos;com.industriallogic.tailqueue.TailQueueTest.getUrgentTailFirst()&apos; to &apos;urgent1&apos;&#x0A;- Original project: &apos;TailQueuePart3-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.tailqueue.TailQueueTest.getUrgentTailFirst().first&apos;&#x0A;- Renamed element: &apos;first&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;first&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/test&lt;com.industriallogic.tailqueue{TailQueueTest.java[TailQueueTest~getUrgentTailFirst@first!1360!1421!1365!1369!QTail;!0!false" name="urgent1" references="true" stamp="1412343197990" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;second&apos; in &apos;com.industriallogic.tailqueue.TailQueueTest.getUrgentTailFirst()&apos; to &apos;urgent2&apos;&#x0A;- Original project: &apos;TailQueuePart3-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.tailqueue.TailQueueTest.getUrgentTailFirst().second&apos;&#x0A;- Renamed element: &apos;second&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;second&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/test&lt;com.industriallogic.tailqueue{TailQueueTest.java[TailQueueTest~getUrgentTailFirst@second!1428!1490!1433!1438!QTail;!0!false" name="urgent2" references="true" stamp="1412343207496" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;tail&apos; from expression &apos;new Tail(1,Tail.IMPORTANT,null)&apos;&#x0A;- Original project: &apos;TailQueuePart3-Problem-Java&apos;&#x0A;- Variable name: &apos;tail&apos;&#x0A;- Destination method: &apos;com.industriallogic.tailqueue.TailQueueTest.getImportantTailFirstIfThereIsNoUrgent()&apos;&#x0A;- Variable expression: &apos;new Tail(1,Tail.IMPORTANT,null)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;tail&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/test&lt;com.industriallogic.tailqueue{TailQueueTest.java" name="tail" replace="true" selection="1854 33" stamp="1412343384762" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;tail&apos; in &apos;com.industriallogic.tailqueue.TailQueueTest.getImportantTailFirstIfThereIsNoUrgent()&apos; to &apos;important1&apos;&#x0A;- Original project: &apos;TailQueuePart3-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.tailqueue.TailQueueTest.getImportantTailFirstIfThereIsNoUrgent().tail&apos;&#x0A;- Renamed element: &apos;tail&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;tail&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/test&lt;com.industriallogic.tailqueue{TailQueueTest.java[TailQueueTest~getImportantTailFirstIfThereIsNoUrgent@tail!1844!1889!1849!1852!QTail;!0!false" name="important1" references="true" stamp="1412343395014" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;important&apos; from expression &apos;new Tail(1,Tail.IMPORTANT,Calendar.getInstance())&apos;&#x0A;- Original project: &apos;TailQueuePart3-Problem-Java&apos;&#x0A;- Variable name: &apos;important&apos;&#x0A;- Destination method: &apos;com.industriallogic.tailqueue.TailQueueTest.getImportantFirstIfThereIsNoUrgentTail()&apos;&#x0A;- Variable expression: &apos;new Tail(1,Tail.IMPORTANT,Calendar.getInstance())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;important&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/test&lt;com.industriallogic.tailqueue{TailQueueTest.java" name="important" replace="true" selection="2360 52" stamp="1412344252298" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;important&apos; in &apos;com.industriallogic.tailqueue.TailQueueTest.getRequestingFirstIfThereIsNoUrgentOrImportantTail()&apos; to &apos;expected&apos;&#x0A;- Original project: &apos;TailQueuePart3-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.tailqueue.TailQueueTest.getRequestingFirstIfThereIsNoUrgentOrImportantTail().important&apos;&#x0A;- Renamed element: &apos;important&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;important&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/test&lt;com.industriallogic.tailqueue{TailQueueTest.java[TailQueueTest~getRequestingFirstIfThereIsNoUrgentOrImportantTail@important!2439!2507!2444!2452!QTail;!0!false" name="expected" references="true" stamp="1412346385575" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;expected1&apos; in &apos;com.industriallogic.tailqueue.TailQueueTest.getRequestingFirstIfThereIsNoUrgentOrImportantTail()&apos; to &apos;requesting1&apos;&#x0A;- Original project: &apos;TailQueuePart3-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.tailqueue.TailQueueTest.getRequestingFirstIfThereIsNoUrgentOrImportantTail().expected1&apos;&#x0A;- Renamed element: &apos;expected1&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;expected1&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/test&lt;com.industriallogic.tailqueue{TailQueueTest.java[TailQueueTest~getRequestingFirstIfThereIsNoUrgentOrImportantTail@expected1!2439!2508!2444!2452!QTail;!0!false" name="requesting1" references="true" stamp="1412346472104" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;expected2&apos; in &apos;com.industriallogic.tailqueue.TailQueueTest.getRequestingFirstIfThereIsNoUrgentOrImportantTail()&apos; to &apos;requesting2&apos;&#x0A;- Original project: &apos;TailQueuePart3-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.tailqueue.TailQueueTest.getRequestingFirstIfThereIsNoUrgentOrImportantTail().expected2&apos;&#x0A;- Renamed element: &apos;expected2&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;expected2&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/test&lt;com.industriallogic.tailqueue{TailQueueTest.java[TailQueueTest~getRequestingFirstIfThereIsNoUrgentOrImportantTail@expected2!2515!2584!2520!2528!QTail;!0!false" name="requesting2" references="true" stamp="1412346477250" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;important1&apos; from expression &apos;new Tail(1,Tail.IMPORTANT,Calendar.getInstance())&apos;&#x0A;- Original project: &apos;TailQueuePart3-Problem-Java&apos;&#x0A;- Variable name: &apos;important1&apos;&#x0A;- Destination method: &apos;com.industriallogic.tailqueue.TailQueueTest.getShouldRotateBetweenImportantAndRequesting()&apos;&#x0A;- Variable expression: &apos;new Tail(1,Tail.IMPORTANT,Calendar.getInstance())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;important1&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/test&lt;com.industriallogic.tailqueue{TailQueueTest.java" name="important1" replace="true" selection="3163 52" stamp="1412346993290" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;requesting1&apos; from expression &apos;new Tail(1,Tail.REQUESTING,Calendar.getInstance())&apos;&#x0A;- Original project: &apos;TailQueuePart3-Problem-Java&apos;&#x0A;- Variable name: &apos;requesting1&apos;&#x0A;- Destination method: &apos;com.industriallogic.tailqueue.TailQueueTest.getShouldRotateBetweenImportantAndRequesting()&apos;&#x0A;- Variable expression: &apos;new Tail(1,Tail.REQUESTING,Calendar.getInstance())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;requesting1&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/test&lt;com.industriallogic.tailqueue{TailQueueTest.java" name="requesting1" replace="true" selection="3459 53" stamp="1412347009983" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private Tail extracted()&apos; from &apos;com.industriallogic.tailqueue.TailQueueTest.getDismissedFirstIfThereIsNoOtherTail()&apos; to &apos;com.industriallogic.tailqueue.TailQueueTest&apos;&#x0A;- Original project: &apos;TailQueuePart3-Problem-Java&apos;&#x0A;- Method name: &apos;extracted&apos;&#x0A;- Destination type: &apos;com.industriallogic.tailqueue.TailQueueTest&apos;&#x0A;- Declared visibility: &apos;private&apos;&#x0A;- Replace occurrences of statements with method" comments="false" description="Extract method &apos;extracted&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/test&lt;com.industriallogic.tailqueue{TailQueueTest.java" name="extracted" replace="true" selection="1542 51" stamp="1412351581213" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Change method &apos;private Tail com.industriallogic.tailqueue.TailQueueTest.add()&apos; to &apos;private Tail add(int id, String tailType)&apos;&#x0A;- Original project: &apos;TailQueuePart3-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.tailqueue.TailQueueTest.add()&apos;&#x0A;- Added parameters:&#x0A;     int id&#x0A;     String tailType" default1="1" default2="&quot;&quot;" delegate="false" deprecate="true" description="Change method &apos;add&apos;" flags="589826" id="org.eclipse.jdt.ui.change.method.signature" input="/test&lt;com.industriallogic.tailqueue{TailQueueTest.java[TailQueueTest~add" name="add" parameter1="{added} {added} -1 int id false" parameter2="{added} {added} -1 String tailType false" stamp="1412351672990" version="1.0"/>&#x0A;<refactoring comment="Change method &apos;private Tail com.industriallogic.tailqueue.TailQueueTest.add(int id, int tailType)&apos; to &apos;private Tail add(int id, int tailType)&apos;&#x0A;- Original project: &apos;TailQueuePart3-Problem-Java&apos;&#x0A;- Original element: &apos;com.industriallogic.tailqueue.TailQueueTest.add(...)&apos;&#x0A;- Changed parameters:&#x0A;     String tailType" delegate="false" deprecate="true" description="Change method &apos;add&apos;" flags="589826" id="org.eclipse.jdt.ui.change.method.signature" input="/test&lt;com.industriallogic.tailqueue{TailQueueTest.java[TailQueueTest~add~I~QString;" name="add" parameter1="int id 0 int id false" parameter2="String tailType 1 int tailType false" stamp="1412351703929" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;tail&apos; from expression &apos;new Tail(id,tailType,Calendar.getInstance())&apos;&#x0A;- Original project: &apos;TailQueuePart3-Problem-Java&apos;&#x0A;- Variable name: &apos;tail&apos;&#x0A;- Destination method: &apos;com.industriallogic.tailqueue.TailQueueTest.add()&apos;&#x0A;- Variable expression: &apos;new Tail(id,tailType,Calendar.getInstance())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;tail&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/test&lt;com.industriallogic.tailqueue{TailQueueTest.java" name="tail" replace="true" selection="1843 46" stamp="1412351788221" version="1.0"/>&#x0A;&#x0A;&#x0A;<refactoring comment="Extract local variable &apos;id&apos; from expression &apos;dismissed1.id&apos;&#x0A;- Original project: &apos;TailQueuePart3-Problem-Java&apos;&#x0A;- Variable name: &apos;id&apos;&#x0A;- Destination method: &apos;com.industriallogic.tailqueue.TailQueueTest.getDismissedFirstIfThereIsNoOtherTail()&apos;&#x0A;- Variable expression: &apos;dismissed1.id&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;id&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/test&lt;com.industriallogic.tailqueue{TailQueueTest.java" name="id" replace="true" selection="1631 13" stamp="1412352313553" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;id2&apos; from expression &apos;dismissed2.id&apos;&#x0A;- Original project: &apos;TailQueuePart3-Problem-Java&apos;&#x0A;- Variable name: &apos;id2&apos;&#x0A;- Destination method: &apos;com.industriallogic.tailqueue.TailQueueTest.getDismissedFirstIfThereIsNoOtherTail()&apos;&#x0A;- Variable expression: &apos;dismissed2.id&apos;" description="Extract local variable &apos;id2&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/test&lt;com.industriallogic.tailqueue{TailQueueTest.java" name="id2" replace="false" selection="1699 13" stamp="1412352322940" version="1.0"/>&#x0A;<refactoring comment="Extract method &apos;private void extracted(int id)&apos; from &apos;com.industriallogic.tailqueue.TailQueueTest.getDismissedFirstIfThereIsNoOtherTail()&apos; to &apos;com.industriallogic.tailqueue.TailQueueTest&apos;&#x0A;- Original project: &apos;TailQueuePart3-Problem-Java&apos;&#x0A;- Method name: &apos;extracted&apos;&#x0A;- Destination type: &apos;com.industriallogic.tailqueue.TailQueueTest&apos;&#x0A;- Declared visibility: &apos;private&apos;&#x0A;- Replace occurrences of statements with method" comments="false" description="Extract method &apos;extracted&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/test&lt;com.industriallogic.tailqueue{TailQueueTest.java" name="extracted" replace="true" selection="1677 33" stamp="1412352354865" version="1.0" visibility="2"/>
</session>